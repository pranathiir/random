import numpy as np
import matplotlib.pyplot as plt

n = int(input("Enter the number of data points: "))
x_values = np.zeros(n)
y_values = np.zeros(n)

for i in range(n):
    x = float(input(f"Enter x{i + 1}: "))
    y = float(input(f"Enter f(x{i + 1}): "))
    x_values[i] = x
    y_values[i] = y

x_to_find = float(input("Enter the x-coordinate to find f(x): "))

def lagrange_basis(x, x_values, j):
    result = 1
    for i in range(len(x_values)):
        if i != j:
            result *= (x - x_values[i]) / (x_values[j] - x_values[i])
    return result

def lagrange_interpolation(x, x_values, y_values):
    interpolated_value = 0
    for j in range(len(x_values)):
        interpolated_value += y_values[j] * lagrange_basis(x, x_values, j)
    return interpolated_value

interpolated_value = lagrange_interpolation(x_to_find, x_values, y_values)
print(f"f({x_to_find}) = {interpolated_value:.2f}")

x_interp = np.linspace(min(x_values), max(x_values), 1000)
y_interp = lagrange_interpolation(x_interp, x_values, y_values)

plt.plot(x_interp, y_interp, label='Lagrange Interpolation', color='blue', linewidth=2)
plt.scatter(x_values, y_values, color='red', marker='o', label='Data Points')
plt.xlabel('x')
plt.ylabel('f(x)')
plt.legend()
plt.title('Lagrange Interpolation')
plt.grid(True)
plt.show()
