def Seidel(A, B, X, n):
for i in range(n):
temp = B[i]
for j in range(n):
if i != j:
temp -= A[i][j] * X[j]
X[i] = temp / A[i][i]
return X
def isDiagonalDominant(A, n):
for i in range(n):
Sum = 0
for j in range(n):
Sum += abs(A[i][j])
Sum -= abs(A[i][i])
if Sum > A[i][i]:
return False
return True
n = int(input("Enter order of the matrix: "))
print("Enter the matrix A: ")
A = [[int(input()) for j in range(n)] for i in range(n)]
print("Enter the matrix B : ")

B = [int(input()) for i in range(n)]
if isDiagonalDominant(A, n) == True:
if n == 3:
X = [0, 0, 0]
print("ITERATION\tX\t\tY\t\tZ")
print('%d\t\t%0.4f\t%0.4f\t%0.4f\n' %(0, X[0], X[1], X[2]))
for i in range(25):
X = Seidel(A, B, X, n)
print('%d\t\t%0.4f\t%0.4f\t%0.4f\n' %(i+1, X[0], X[1], X[2]))
print('\nSolution: x=%0.3f, y=%0.3f and z = %0.3f\n'% (X[0], X[1], X[2]))
elif n == 2:
X = [0, 0]
print("ITERATION\tX\t\tY")
print('%d\t\t%0.4f\t%0.4f\n' %(0, X[0], X[1]))
for i in range(25):
X = Seidel(A, B, X, n)
print('%d\t\t%0.4f\t%0.4f\n' %(i+1, X[0], X[1]))
print('\nSolution: x=%0.3f, y=%0.3f\n'% (X[0], X[1]))
else:
print("Not diagonally dominant")
