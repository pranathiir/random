///window viewport
///4th
/*#include<windows.h>
#include<iostream>
#include<GL/glut.h>
#include<math.h>
using namespace std;

#define SCREEN_HEIGHT 480

int count=0;
int pointsCount=0;
int slope=0;

struct Point
{
    GLint x;
    GLint y;
};
Point coordinates[500];
Point points[500];

void init()
{
    glClearColor(0.0f, 0.0f, 0.0f, 0);
    glPointSize(4.0f);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D(0.0, 640.0, 0.0, 480.0);
}

void display(void)
{
    glFlush();
}

void drawRect(Point lowerLeft,Point upperRight)
{
    glColor3f(0, 0.4, 0.8);
    glPolygonMode(GL_FRONT_AND_BACK,GL_LINE);
    glBegin(GL_QUADS);
        glVertex2f(lowerLeft.x,lowerLeft.y);
        glVertex2f(upperRight.x,lowerLeft.y);
        glVertex2f(upperRight.x,upperRight.y);
        glVertex2f(lowerLeft.x,upperRight.y);
    glEnd();
    glFlush();
}

void polygon1(Point lowerLeft,Point upperRight)
{
    glColor3f(0.4,0,0.8);
    glBegin(GL_TRIANGLES);
        glVertex2f(lowerLeft.x+50,lowerLeft.y+50);
        glVertex2f(upperRight.x-50,lowerLeft.y+50);
        glVertex2f(upperRight.x-50,upperRight.y-50);
    glEnd();
    glFlush();
}

void polygon2(Point lowerLeft,Point upperRight)
{
    glColor3f(0.6,0.3,0);
    glBegin(GL_QUADS);
        glVertex2f(lowerLeft.x+30,lowerLeft.y+30);
        glVertex2f(upperRight.x-30,lowerLeft.y+30);
        glVertex2f(upperRight.x-30,upperRight.y-30);
        glVertex2f(lowerLeft.x+30,upperRight.y-30);
    glEnd();
    glFlush();
}

void mouse_handling(int button,int state,int x,int y)
{
    if(button==GLUT_LEFT && state==GLUT_DOWN)
    {
        y=SCREEN_HEIGHT-y;
        coordinates[count].x=x;
        coordinates[count].y=y;
        count++;
    }
    if(count==2)
    {
        drawRect(coordinates[0],coordinates[1]);
        polygon1(coordinates[0],coordinates[1]);
    }
    if(count==4)
    {
        drawRect(coordinates[2],coordinates[3]);
        polygon2(coordinates[2],coordinates[3]);
    }
}


int main(int argc, char **argv)
{
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE|GLUT_RGB);
    glutInitWindowPosition(200, 200);
    glutInitWindowSize(640, 480);
    glutCreateWindow("OpenGL");
    init();
    glutDisplayFunc(display);
    glutMouseFunc(mouse_handling);
    glutMainLoop();

    return 0;
}*/
